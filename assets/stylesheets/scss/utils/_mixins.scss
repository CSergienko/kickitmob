/* IE8 conditional mixin */
@mixin ie8 {
  @if $ie8 == 'true' {
    @content;
  }
}


/* Theme Conditional Mixins */
@mixin primary {
  @if $theme == 'primary' {
    @content;
  }
}
 
@mixin secondary {
  @if $theme == 'secondary' {
    @content;
  }
}

/* Font Mixin */
@mixin font($font-size, $line-height: $font-size) {
    @include rem(font-size, $font-size);
    @include rem(line-height, $line-height);
}

/* PX to REM */
@function parseInt($n) { /* 2 */
  @return $n / ($n * 0 + 1);
}

@mixin rem($property, $values) {
  $px : (); /* 3 */
  $rem: (); /* 3 */

  @each $value in $values { /* 4 */

    @if $value == 0 or $value == auto { /* 5 */
      $px : append($px , $value);
      $rem: append($rem, $value);
    }

    @else {
      $unit: unit($value);    /* 6 */
      $val: parseInt($value); /* 6 */

      @if $unit == "px" {  /* 7 */
        $px : append($px,  $value);
        $rem: append($rem, ($val / 16 + rem));
      }

      @if $unit == "rem" { /* 7 */
        $px : append($px,  ($val * 16 + px));
        $rem: append($rem, $value);
      }
    }
  }

  @if $px == $rem {     /* 8 */
    #{$property}: $px;  /* 9 */
  } @else {
    #{$property}: $px;  /* 9 */
    #{$property}: $rem; /* 9 */
  }
}

/* Retina Image Mixin */
@mixin image-2x($image) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
  }
}

@mixin gutterLeftRight() {
    @include rem(padding-left, $spacer);
    @include rem(padding-right, $spacer);
}

@mixin gutterTopBottom() {
    @include rem(padding-top, $spacer);
    @include rem(padding-bottom, $spacer);
}
